package LeanJDK10;

public class Features2 {

    /**
     *      1、垃圾回收接口
     *      这不是让开发者用来控制垃圾回收的接口；而是一个在 JVM 源代码中的允许另外的垃圾回收器快速方便的集成的接口。
     *
     *      垃圾回收接口为HotSpot的GC代码提供更好的模块化；在不影响当前代码的基础情况下，将GC添加到HotSpot变的更简单；
     *      更容易从JDK构建中排除GC。实际添加或删除GC不是目标，这项工作将使HotSpot中GC算法的构建时间隔离取得进展，但它不是完全构建时间隔离的目标。
     *
     *      2、并行Full GC 的G1
     *      JDK10 通过并行Full GC，改善G1的延迟。G1垃圾收集器在JDK 9中是默认的。以前的默认值并行收集器中有一个并行的Full GC。
     *      为了尽量减少对使用GC用户的影响，G1的Full GC也应该并行。
     *
     *      G1垃圾收集器的设计目的是避免Full收集，但是当集合不能足够快地回收内存时，就会出现完全GC。
     *      目前对G1的Full GC的实现使用了单线程标记-清除-压缩算法。JDK10 使用并行化标记-清除-压缩算法，并使用Young和Mixed收集器相同的线程数量。
     *      线程的数量可以由-XX:ParallelGCThreads选项来控制，但是这也会影响用Young和Mixed收集器的线程数量。
     *
     *
     */
}
