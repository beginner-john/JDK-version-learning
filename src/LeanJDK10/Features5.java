package LeanJDK10;

public class Features5 {

    /**
     *      1、Root 证书
     *      在JDK中提供一组默认的root 认证权威（CA）证书。在Oracle的Java SE根CA程序中开源root证书，以使OpenJDK构建对开发人员更有吸引力，
     *      并减少这些构建和Oracle JDK构建之间的差异。
     *
     *      cacerts密钥存储库是JDK的一部分，它的目的是包含一组root证书，这些root证书可以用来在各种安全协议中使用的证书链中建立信任。
     *      而，JDK源代码中的cacerts密钥库目前是空的。因此，诸如TLS之类的关键安全组件在OpenJDK构建中不会默认工作。
     *      为了解决这个问题，用户必须配置和填充cacerts密钥库，并使用一组root证书来记录，例如， JDK 9 release notes。
     *
     *      2、基于时间的版本控制
     *      使用JEP 223的版本号语义，每个在JDK发布版上工作或者在其上构建或使用组件的人都必须先说明发布的发布日期，然后切换到说版本号，已知。
     *      维护库，框架和工具的开发人员必须准备好更改在每个JDK发布周期后期检查版本号的代码。这对所有参与者来说都很尴尬和混乱。
     *
     *      因此，这里提出的主要改变是重新编制版本号来编码，而不是编码的兼容性和重要性，而是按照发布周期的时间推移。
     *      这是更适合基于时间的发布模型，因为每个发布周期，因此每个发布的版本号，总是提前知道。
     *
     *
     */
}
